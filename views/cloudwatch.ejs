<!DOCTYPE html>
<html>

<head>
  <% include ./partials/head %>
</head>

<body>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.bundle.min.js"></script>
  <div id="wrapper">
    <% include ./partials/navigation %>
    <div id="page-wrapper">
      <div class="row">
        <div class="col-lg-3">
          <label for="metric-inp" class="control-label">Metric:</label>
          <select id="metric-inp" class="form-control">
            <% for (var i=0; i<allMetrics.length; i++) { %>
            <option value="<%= allMetrics[i] %>">
              <%= allMetrics[i] %>
            </option>
            <% } %>
          </select>
        </div>
        <div class="col-lg-3 form-group">
          All instances
          <select id="instance-inp" class="form-control">
            <% for (var i=0; i<instances.length; i++) { %>
            <% var name = instances[i].Instances[0].InstanceId; %>
            <% if (instances[i].Instances[0].Tags[0]) { %>
            <%  name = instances[i].Instances[0].Tags[0].Value; %>
            <% } %>
            <option value="<%= instances[i].Instances[0].InstanceId %>">
              <%= name %>
            </option>
            <% } %>
          </select>
        </div>

        <div class="col-lg-3">
          <label></label>
          <button type="button" class="btn btn-primary form-control" onclick="drawMetricGraph();">Load graph</button>
        </div>
      </div>



      <div class="row">
        <canvas id="myChart" width="400" height="400"></canvas>
        <!-- Page wrapper -->
      </div>
    </div>
  </div>
  <script>
  var ctx = document.getElementById("myChart").getContext('2d');
  
  // var chartLabels = [];
  // var datasets = [];

  function drawMetricGraph(e) {
    var theurl = '/api/cw/metricData/';
    $.ajax({
        url: theurl,
        type: "POST",
        data: {
          instanceIds: [$("#instance-inp option:selected").val()],
          metrics: [$("#metric-inp option:selected").val()],
        },
        success: function(result) {
          console.log(result);
          var chartLabels = result.data.MetricDataResults[0].Timestamps;
          var datasets = result.data.MetricDataResults[0].Values;
          initChart(chartLabels, datasets);
        },
        error: function(result) {
          
        },
        timeout: 8000
      });
    // body...
  }

  var myChart;

  function initChart(labels, datasets) {
    myChart = new Chart(ctx, {
    type: 'line',
    data: {
      labels: labels,
      datasets: [{
        label: $("#instance-inp option:selected").val() + " - " + $("#metric-inp option:selected").val(),
        data: datasets,
        backgroundColor: [
          'rgba(255, 99, 132, 0.2)',
          'rgba(54, 162, 235, 0.2)',
          'rgba(255, 206, 86, 0.2)',
          'rgba(75, 192, 192, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(255, 159, 64, 0.2)'
        ],
        borderColor: [
          'rgba(255,99,132,1)',
          'rgba(54, 162, 235, 1)',
          'rgba(255, 206, 86, 1)',
          'rgba(75, 192, 192, 1)',
          'rgba(153, 102, 255, 1)',
          'rgba(255, 159, 64, 1)'
        ],
        borderWidth: 1
      }]
    },
    options: {
      scales: {
        yAxes: [{
          ticks: {
            beginAtZero: true
          }
        }]
      }
    }
  });

  }

  </script>
</body>

</html>
